# postgresql server
alias pgdown="pg_ctl -D /usr/local/var/postgres stop -s -m fast"
alias pgup="pg_ctl -D /usr/local/var/postgres -l /usr/local/var/postgres/server.log start"

# ipython qtconsole
alias ipy='ipython qtconsole --ConsoleWidget.font_family="Consolas" --ConsoleWidget.font_size=13 --pylab=inline'

# python virtualenv
alias pyvirall='virtualenv venv --system-site-packages && source venv/bin/activate'
alias pyvir='virtualenv venv && source venv/bin/activate'

# vhosts
alias hosts='sudo vim /etc/hosts'
alias vhosts='sudo vim /etc/apache2/extra/httpd-vhosts.conf'

# cleanup aliases
# remove .DS_Store recursively
alias rmdss='sudo find . -name '*.DS_Store' -type f -delete'
# remove .swo recursively
alias rmswo='sudo find . -name '*.swo' -type f -delete'
# remove .swp recursively
alias rmswp='sudo find . -name '*.swp' -type f -delete'
# remove .pyc recursively
alias rmpyc='sudo find . -name '*.pyc' -type f -delete'

#copy working directory
alias cwd='pwd | tr -d "\r\n" | pbcopy'

# copy file interactive
alias cp='cp -i'

# move file interactive
alias mv='mv -i'

# untar
alias untar='tar xvf'

# Call from a local repo to open the repository on github/bitbucket in browser
function repo() {
 giturl=$(git config --get remote.origin.url)
 if [ "$giturl" == "" ]
   then
    echo "Not a git repository or no remote.origin.url set"
    exit 1;
 fi
 if [[ "$giturl" == *github* ]]
   then
    giturl=${giturl/git\@github\.com\:/https://github.com/}
 elif [[ "$giturl" == *bitbucket* ]]
   then
    giturl=${giturl/git\@bitbucket\.org\:/https://bitbucket.org/}
 else
    echo "Not a github or bitbucket repository"
    exit 1;
 fi
 giturl=${giturl/\.git//}
 echo $giturl
 open $giturl
}

# Query Wikipedia via console over DNS
mwiki() { dig +short txt "$*".wp.dg.cx; }

# Enter the matrix
alias matrix='COL=$(( $(tput cols) / 2 )); clear; tput setaf 2; while :; do tput cup $((RANDOM%COL)) $((RANDOM%COL)); printf "%$((RANDOM%COL))s" $((RANDOM%2)); done'

# Get colors in manual pages
man() {
 env \
 LESS_TERMCAP_mb=$(printf "\e[1;31m") \
 LESS_TERMCAP_md=$(printf "\e[1;31m") \
 LESS_TERMCAP_me=$(printf "\e[0m") \
 LESS_TERMCAP_se=$(printf "\e[0m") \
 LESS_TERMCAP_so=$(printf "\e[1;44;33m") \
 LESS_TERMCAP_ue=$(printf "\e[0m") \
 LESS_TERMCAP_us=$(printf "\e[1;32m") \
 man "$@"
}

# Pipe my public key to my clipboard.
alias pubkey="more ~/.ssh/id_rsa.pub | pbcopy | echo '=> Public key copied to pasteboard.'"

